spring.config.name=application-local
spring.config.location=classpath:application-local.properties

#imapi项目端口
server.port=8092

##开启https
server.openHttps=false
http.port=8092
 


#设置UTF-8格式
#解决程序读配置文件乱码问题
spring.messages.encoding=UTF-8
spring.main.allow-bean-definition-overriding=true

###tomcat 请求设置

server.max-http-header-size=1048576
server.tomcat.max-connections=3000
server.tomcat.max-http-post-size=1048576
server.tomcat.max-threads=1000

#修改mongodb访问地址
mongoconfig.uri=mongodb://localhost:27017
mongoconfig.dbName=imapi
mongoconfig.mapPackage=cn.xyz.mianshi.vo
mongoconfig.roomDbName=imRoom
mongoconfig.username=
mongoconfig.password=
mongoconfig.connectTimeout=20000
mongoconfig.socketTimeout=20000
mongoconfig.maxWaitTime=20000
#logging.level.org.springframework.data.mongodb.core=DEBUG


#Redis Properties（缓存配置） #修改redis服务地址
redisson.address=redis://localhost:6379
redisson.database=1
redisson.password=
redisson.pingTimeout=10000
redisson.timeout=10000
redisson.connectTimeout=10000
redisson.pingConnectionInterval=500

#图片资源地址
resource.domain=http://localhost:8081
resource.path=E:\\workspace\\weim\\we-im\\im-component\\mianshi-im-api\\logs

#C2C地址
c2c.auth.key=a891a7a603af475c8ae17fb4b230e958
c2c.sign.key=26e11b2e8ed2ccbcf060756f2b845fd
c2c.sign.smac=4901B0E56BD8CB679D8C822F8
c2c.transfer.out.url=http://localhost:8801/uc/transfer/apply/recharge
c2c.transfer.in.url=http://localhost:8801/uc/transfer/apply/withdraw
c2c.auth.url=http://localhost:8801/uc/register/auth
c2c.password.url=http://localhost:8801/uc/member/password/reset

telegram.notice.url=https://api.telegram.org/bot1889347416:AAFaybenwdSOIy7dkVRnobj_lN3KCbyPnJU/sendMessage?chat_id=-328474417

##APP Properties
#upload上传服务器地址，配置内网地址即可，用于imapi里面调用upload做文件的复制，删除等操作
im.appConfig.uploadDomain=http://localhsot:8081/
im.appConfig.apiKey=a891a7a6-03af-475c-8ae1-7fb4b230e958
im.appConfig.buildTime=@timestamp@
im.appConfig.openTask=1
im.appConfig.distance=20
im.appConfig.qqzengPath=
#是否开启清除 admin token，开启后在项目启动时会清除redis里存的 admin token (admin token 用于管理后台、公众号页面、开放平台)
im.appConfig.openClearAdminToken=1
im.appConfig.languages[0].key=zh
im.appConfig.languages[0].name=\u4E2D\u6587
im.appConfig.languages[0].value=\u7B80\u4F53\u4E2D\u6587
im.appConfig.languages[1].key=en
im.appConfig.languages[1].name=\u82F1\u6587
im.appConfig.languages[1].value=English
im.appConfig.languages[2].key=big5
im.appConfig.languages[2].name=\u7E41\u4F53
im.appConfig.languages[2].value=\u7E41\u4F53\u4E2D\u6587
im.appConfig.balanceVersion=0



## SMS Properties(短信配置)

##天天国际短信
im.smsConfig.host=m.isms360.com
im.smsConfig.port=8085
im.smsConfig.api=/mt/MT3.ashx
im.smsConfig.username=username
im.smsConfig.password=password
im.smsConfig.templateChineseSMS=【IM】,您的验证码为:
im.smsConfig.templateEnglishSMS=[IM], Your verification code is:
## 阿里云短信服务
im.smsConfig.product=Dysmsapi
im.smsConfig.domain=dysmsapi.aliyuncs.com
im.smsConfig.accesskeyid=
im.smsConfig.accesskeysecret=
im.smsConfig.signname=IM
im.smsConfig.chinase_templetecode=
im.smsConfig.english_templetecode=

#修改rocketmq服务地址
rocketmq.name-server=192.168.1.66:9876
rocketmq.producer.group=xmppProducer
rocketmq.producer.send-message-timeout=30000

im.mqConfig.nameAddr=192.168.1.66:9876

#XMPP Properties（XMPP主机和端口以及推送用户配置）
im.xmppConfig.host=127.0.0.1
im.xmppConfig.serverName=127.0.0.1
im.xmppConfig.port=5222
im.xmppConfig.username=10005
im.xmppConfig.password=10005
#修改mongodb访问地址
im.xmppConfig.dbUri=mongodb://192.168.1.66:28018
im.xmppConfig.dbName=tigase
im.xmppConfig.dbUsername=
im.xmppConfig.dbPassword=

###微信支付相关配置
im.wxConfig.appid=
im.wxConfig.mchid=1492798782
im.wxConfig.secret=
im.wxConfig.apiKey=
im.wxConfig.callBackUrl=http://imapi.server.com/user/recharge/wxPayCallBack
im.wxConfig.pkPath=classpath:shiku.p12

im.aliPayConfig.appid=
im.aliPayConfig.app_private_key=
im.aliPayConfig.charset=utf-8
im.aliPayConfig.alipay_public_key=
im.aliPayConfig.callBackUrl=https://imapi.server.com:8094/alipay/callBack
im.aliPayConfig.pid =

im.wxPublicNum.appId=
im.wxPublicNum.appSecret=



#不需要访问令牌(access-token)即可访问的接口
authorizationfilter.requestUriList[0]=/user/register
authorizationfilter.requestUriList[1]=/user/login
authorizationfilter.requestUriList[2]=/verify/telephone
authorizationfilter.requestUriList[3]=/basic/randcode/sendSms
authorizationfilter.requestUriList[4]=/user/password/reset
authorizationfilter.requestUriList[5]=/user/recharge/wxPayCallBack
authorizationfilter.requestUriList[6]=/user/recharge/aliPayCallBack
authorizationfilter.requestUriList[7]=/user/wxUserOpenId
authorizationfilter.requestUriList[8]=/user/getUserInfo
authorizationfilter.requestUriList[9]=/user/getWxUser
authorizationfilter.requestUriList[10]=/user/getWxUserbyId
authorizationfilter.requestUriList[11]=/CustomerService/register
authorizationfilter.requestUriList[12]=/user/getWxOpenId
authorizationfilter.requestUriList[13]=/user/registerSDK
authorizationfilter.requestUriList[14]=/user/sdkLogin
authorizationfilter.requestUriList[15]=/user/bindingTelephone
authorizationfilter.requestUriList[16]=/alipay/callBack
authorizationfilter.requestUriList[17]=/alipay/getAliUser
authorizationfilter.requestUriList[18]=/wxmeet
authorizationfilter.requestUriList[19]=/user/checkReportUrl
authorizationfilter.requestUriList[20]=/open/webAppCheck
authorizationfilter.requestUriList[21]=/pay/unifiedOrder
authorizationfilter.requestUriList[22]=/pay/SKPayTest
authorizationfilter.requestUriList[23]=/getQRCodeKey
authorizationfilter.requestUriList[24]=/qrCodeLoginCheck
authorizationfilter.requestUriList[25]=/user/register/v1
authorizationfilter.requestUriList[26]=/auth/getLoginCode
authorizationfilter.requestUriList[27]=/user/login/v1
authorizationfilter.requestUriList[28]=/user/smsLogin
authorizationfilter.requestUriList[29]=/user/bindingTelephone/v1
authorizationfilter.requestUriList[30]=/user/registerSDK/v1
authorizationfilter.requestUriList[31]=/user/sdkLogin/v1
authorizationfilter.requestUriList[32]=/authkeys/getLoginPrivateKey
authorizationfilter.requestUriList[33]=/authkeys/uploadLoginKey
authorizationfilter.requestUriList[34]=/getImgCode
authorizationfilter.requestUriList[35]=/user/login/auto/v1
authorizationfilter.requestUriList[36]=/config
authorizationfilter.requestUriList[37]=/authkeys/isSupportSecureChat
authorizationfilter.requestUriList[38]=/swagger-resources
authorizationfilter.requestUriList[39]=/v2/api-docs
authorizationfilter.requestUriList[40]=/auth/getLoginCode
authorizationfilter.requestUriList[41]=/api/appResource/queryByCode
authorizationfilter.requestUriList[42]=/customerLink/list
authorizationfilter.requestUriList[43]=/redPacket/UserSendRedPacketConfig/Setting
authorizationfilter.requestUriList[44]=/alipay/callBack/v2
authorizationfilter.requestUriList[45]=/user/transfer/c2c/notify
authorizationfilter.requestUriList[46]=/banner/list
authorizationfilter.requestUriList[47]=/liveRoom/upsertLive
authorizationfilter.requestUriList[48]=/liveRoom/updateLiveInfo
authorizationfilter.requestUriList[49]=/user/login/visitor
authorizationfilter.requestUriList[50]=/user/testm
authorizationfilter.requestUriList[51]=/user/check/token
authorizationfilter.requestUriList[52]=/liveRoom/popular
authorizationfilter.requestUriList[53]=/liveRoom/list
authorizationfilter.requestUriList[54]=/b/circle/msg/program


#控制不同包下的日志级别(日志级别由低到高 trace < debug < info < warn < error)
##logging.level.helloWorldController=warn

#在当前磁盘的根路径下创建spring文件夹和里面的log文件夹；使用 spring.log 作为默认文件
##logging.path=/spring/log

#可以指定完整的路径(logging.path和logging.file 配置一个即可)
#logging.file=E:/springboot.log

# 在控制台输出的日志格式（使用默认格式即可）
logging.pattern.console=%d{yyyy-MM-dd HH:mm} - %logger{50} %msg%n
# 指定文件中日志输出的格式（使用默认格式即可）
logging.pattern.file=%d{yyyy-MM-dd HH:mm} - %logger{50} %msg%n

## %d{HH: mm:ss.SSS}——日志输出时间
## %thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用
## %-5level——日志级别，并且使用5个字符靠左对齐
## %logger{36}——日志输出者的名字
## %msg——日志消息
## %n——平台的换行符

#文件上传保存地址appResource/queryByCode
web.file.path=D:\\test\\static
#web.file.path=/home/kuxin/spring-boot-imapi/

pay.payUrl = https://api2.payunk.com/index/unifiedorder?format=json
pay.payAppId = 1096645
pay.paySign = up1pwbCQ58z9pZmyx4xvaq6cledE16QI
pay.notifyUrl = http://39.98.47.199:8092/alipay/callBack/v2
pay.pay_SUCCESS_WEB_URL = http://www.baidu.com
pay.pay_ERROR_WEB_URL = http://www.baidu.com
pay.payType = wxrequestPaymentTy
pay.wxAppid = wxef6e2ba2099bf1fd
pay.wxKey = a55b85f83e5547a9f7a54911021b8a15
pay.wxUserName = gh_bec380e5e574
